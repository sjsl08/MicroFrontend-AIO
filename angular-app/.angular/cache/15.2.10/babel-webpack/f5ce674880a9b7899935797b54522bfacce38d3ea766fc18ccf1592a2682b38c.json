{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { NgZone } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { singleSpaAngular, getSingleSpaExtraProviders } from 'single-spa-angular';\nimport { AppModule } from './app/app.module';\n// import { environment } from './environments/environment';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n// if (environment.production) {\n//   enableProdMode();\n// }\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return __NgCli_bootstrap_1.platformBrowser(getSingleSpaExtraProviders()).bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NavigationStart,\n  NgZone\n});\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;","map":{"version":3,"mappings":";AAAA,SAAyBA,MAAM,QAAQ,eAAe;AAGtD,SAASC,MAAM,EAAEC,eAAe,QAAQ,iBAAiB;AAEzD,SAASC,gBAAgB,EAAEC,0BAA0B,QAAQ,oBAAoB;AAGjF,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AACA,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE;AACA;AACA;AAEA,MAAMC,UAAU,GAAGJ,gBAAgB,CAAC;EAClCK,iBAAiB,EAAEC,cAAc,IAAG;IAClCH,qBAAqB,CAACI,IAAI,CAACD,cAAc,CAAC;IAC1C,OAAOE,oCAAuBP,0BAA0B,EAAE,CAAC,CAACQ,eAAe,CAACP,SAAS,CAAC;EACxF,CAAC;EACDQ,QAAQ,EAAE,cAAc;EACxBZ,MAAM;EACNC,eAAe;EACfF;CACD,CAAC;AAEF,OAAO,MAAMc,SAAS,GAAGP,UAAU,CAACO,SAAS;AAC7C,OAAO,MAAMC,KAAK,GAAGR,UAAU,CAACQ,KAAK;AACrC,OAAO,MAAMC,OAAO,GAAGT,UAAU,CAACS,OAAO","names":["NgZone","Router","NavigationStart","singleSpaAngular","getSingleSpaExtraProviders","AppModule","singleSpaPropsSubject","lifecycles","bootstrapFunction","singleSpaProps","next","__NgCli_bootstrap_1","bootstrapModule","template","bootstrap","mount","unmount"],"sourceRoot":"","sources":["/home/gaian/MicrofrontEnd AIO/angular-app/src/main.single-spa.ts"],"sourcesContent":["import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router, NavigationStart } from '@angular/router';\n\nimport { singleSpaAngular, getSingleSpaExtraProviders } from 'single-spa-angular';\n\n\nimport { AppModule } from './app/app.module';\n// import { environment } from './environments/environment';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\n// if (environment.production) {\n//   enableProdMode();\n// }\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic(getSingleSpaExtraProviders()).bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  Router,\n  NavigationStart,\n  NgZone,\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}