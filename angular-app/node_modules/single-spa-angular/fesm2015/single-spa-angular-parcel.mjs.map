{"version":3,"file":"single-spa-angular-parcel.mjs","sources":["../../libs/single-spa-angular/parcel/src/parcel.component.ts","../../libs/single-spa-angular/parcel/src/parcel.module.ts","../../libs/single-spa-angular/parcel/src/single-spa-angular-parcel.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Parcel, ParcelConfig, AppProps } from 'single-spa';\n\nconst enum Action {\n  Mount = 'mount',\n  Update = 'update',\n  Unmount = 'unmount',\n}\n\n// This will be provided through Terser global definitions by Angular CLI. This will\n// help to tree-shake away the code unneeded for production bundles.\ndeclare const ngDevMode: boolean;\n\n@Component({\n  selector: 'parcel',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class ParcelComponent implements OnChanges, OnInit, OnDestroy {\n  @Input() config: ParcelConfig | null = null;\n  @Input() mountParcel: AppProps['mountParcel'] | null = null;\n  @Input() onParcelMount: (() => void) | null = null;\n  @Input() wrapWith = 'div';\n  @Input() customProps: Record<string, unknown> = {};\n  @Input() appendTo: Node | null = null;\n  @Input() handleError = (error: Error) => console.error(error);\n\n  private hasError = false;\n  private unmounted?: boolean;\n  private wrapper: HTMLElement | null = null;\n  private parcel: Parcel | null = null;\n  private task: Promise<void> | null = null;\n\n  constructor(private host: ElementRef<HTMLElement>) {}\n\n  ngOnChanges(): void {\n    this.scheduleTask(Action.Update, () => {\n      if (this.parcel !== null && this.parcel.update) {\n        return this.parcel.update(this.customProps);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.scheduleTask(Action.Mount, () => {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && this.mountParcel === null) {\n        throw new Error(\n          'single-spa-angular: the [mountParcel] binding is required when using the <parcel> component. You can either (1) import mountRootParcel from single-spa or (2) use the mountParcel prop provided to single-spa applications.',\n        );\n      }\n\n      this.wrapper = document.createElement(this.wrapWith);\n\n      if (this.appendTo !== null) {\n        this.appendTo.appendChild(this.wrapper);\n      } else {\n        this.host.nativeElement.appendChild(this.wrapper);\n      }\n\n      this.parcel = this.mountParcel!(this.config!, {\n        ...this.customProps,\n        domElement: this.wrapper,\n      });\n\n      if (this.onParcelMount !== null) {\n        this.parcel.mountPromise.then(this.onParcelMount);\n      }\n\n      this.unmounted = false;\n      return this.parcel.mountPromise;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.scheduleTask(Action.Unmount, () => {\n      if (this.parcel !== null && this.parcel.getStatus() === 'MOUNTED') {\n        return this.parcel.unmount();\n      }\n    });\n\n    if (this.wrapper !== null) {\n      this.wrapper.parentNode!.removeChild(this.wrapper);\n    }\n\n    this.unmounted = true;\n  }\n\n  private scheduleTask(action: Action, task: () => void | Promise<any>): void {\n    if (this.hasError && action !== Action.Unmount) {\n      // In an error state, we don't do anything anymore except for unmounting\n      return;\n    }\n\n    this.task = (this.task || Promise.resolve())\n      .then(() => {\n        if (this.unmounted && action !== Action.Unmount) {\n          // Never do anything once the angular component unmounts\n          return;\n        }\n\n        return task();\n      })\n      .catch((error: Error) => {\n        this.task = Promise.resolve();\n        this.hasError = true;\n\n        if (error?.message) {\n          error.message = `During '${action}', parcel threw an error: ${error.message}`;\n        }\n\n        if (typeof this.handleError === 'function') {\n          this.handleError(error);\n        } else {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n\n        // No more things to do should be done -- the parcel is in an error state\n        throw error;\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { ParcelComponent } from './parcel.component';\n\n@NgModule({\n  imports: [ParcelComponent],\n  exports: [ParcelComponent],\n})\nexport class ParcelModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}