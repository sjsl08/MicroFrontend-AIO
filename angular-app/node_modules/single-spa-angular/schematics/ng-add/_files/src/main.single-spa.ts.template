<% if (routing) { %>import { enableProdMode, NgZone } from '@angular/core';<% } %>
<% if (!routing) { %>import { enableProdMode, NgZone } from '@angular/core';<% } %>
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';<% if (routing) { %>
import { Router, NavigationStart } from '@angular/router';<% } %>

<% if (routing) { %>import { singleSpaAngular, getSingleSpaExtraProviders } from 'single-spa-angular';
<% } else { %>import { singleSpaAngular } from 'single-spa-angular';<% } %>

import { AppModule } from './app/app.module';
import { environment } from './environments/environment';
import { singleSpaPropsSubject } from './single-spa/single-spa-props';

if (environment.production) {
  enableProdMode();
}

const lifecycles = singleSpaAngular({
  bootstrapFunction: singleSpaProps => {
    singleSpaPropsSubject.next(singleSpaProps);<% if (routing) { %>
    return platformBrowserDynamic(getSingleSpaExtraProviders()).bootstrapModule(AppModule);<% } else { %>
    return platformBrowserDynamic().bootstrapModule(AppModule);<% } %>
  },
  template: '<<%= prefix %>-root />',<% if (routing) { %>
  Router,
  NavigationStart,<% } %>
  NgZone,
});

export const bootstrap = lifecycles.bootstrap;
export const mount = lifecycles.mount;
export const unmount = lifecycles.unmount;
