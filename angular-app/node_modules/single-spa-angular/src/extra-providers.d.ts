import { StaticProvider } from '@angular/core';
import { BrowserPlatformLocation, LocationChangeListener } from '@angular/common';
import * as i0 from "@angular/core";
export declare class SingleSpaPlatformLocation extends BrowserPlatformLocation {
    private skipNextPopState;
    private readonly source;
    pushState(state: any, title: string, url: string): void;
    replaceState(state: any, title: string, url: string): void;
    onPopState(fn: LocationChangeListener): VoidFunction;
    static ɵfac: i0.ɵɵFactoryDeclaration<SingleSpaPlatformLocation, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SingleSpaPlatformLocation>;
}
/**
 * The `PlatformLocation` class is an "injectee" of the `PathLocationStrategy`,
 * which creates `Subject` internally for listening on `popstate` events. We want
 * to provide this class in the most top injector that's used during bootstrapping.
 */
export declare function getSingleSpaExtraProviders(): StaticProvider[];
